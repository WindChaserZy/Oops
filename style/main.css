/**
 * =============================================================================
 * This is the file where all your styling should go in.
 * Instead of modifying the styles found in the monogatari.css file or others,
 * you should overwrite those styles in this file.
 *
 * The CSS selectors shown are not an extensive list but they are the most
 * common you might want to change. To find what other elements are available,
 * you can take a look at the monogatari.css file or use your browser's dev
 * tools to inspect the elements.
 * =============================================================================
**/

/**
 * ===========================
 * General Styling
 * ===========================
**/

/* General Style */
body {
	
}

/* Simple Button styles*/
button {
	
}

/* Simple Button Style on Hover */
button:hover {
	
}

/* General Styling for Menu Screens */
[data-screen] {

}

/**
 * ===========================
 * Main Menu Styling
 * ===========================
**/

/* Main Menu Styling */
[data-screen="main"] {
	background-position-y: bottom;
}

/* Main Menu Buttons Styling */
[data-screen="main"] button {
	background-color:#ffffff;
	color:#4b4b4b;
	border-style: solid;
	border-width: 2px;
}
[data-screen="main"] button:hover {
	background-color:#ffffff;
	color:#4b4b4b;
	border-style: solid;
	border-width: 2px;
}



/**
 * ===========================
 * Save and Load Menus Styling
 * ===========================
**/

/* Slots Style */
[data-component="save-slot"] figure {

}

/* Slot's Image Style */
[data-component="save-slot"] img {

}

/* Slots Title Style */
[data-component="save-slot"] figcaption {

}

/* Slots Delete Button Style */
[data-component="save-slot"] button {

}

/**
 * ===========================
 * Game Elements Styling
 * ===========================
**/

/* Choice Buttons style */
[data-component="choice-container"] button {
	color:#000000;
	background:#ffffff;
	border-style: solid;
	border-width: 2px;
	box-shadow: 3px 3px 0px #000000;
	padding-top: 1rem;
	padding-bottom: 1rem;
}

/* Choice Button Style on Hover */
[data-component="choice-container"] button:hover {
	background-color:#bbb8b8;
}

/* Text Box styling */
[data-component="text-box"] {
	color:#ffffff;
	/* background:#646464; */
    background: rgba(100, 100, 100, 0.5);
	border-top-style: solid;
	border-top-color: #333333;
	border-top-width: 2px;
}

/* Message Box styling */
.modal .modal__content{
	border-radius: 0%;
}
message-modal .modal__content{
	border-style: solid;
	border-width: 2px;
	border-color: #333333;
	padding-top: 0rem;
	padding-bottom: 0rem;
}
[data-ui="message-content"] h3{
	font-size: 1.3rem;
	text-align: center;
	padding-bottom: 0.5rem;
	border-bottom-color: #4b4b4b;
	border-bottom-style: dashed;
	border-bottom-width: 1px;
}
message-modal button{
	background-color:#ffffff;
	color:#4b4b4b;
	border-style: solid;
	border-width: 2px;
}
message-modal button:hover{
	background-color:#cccccc;
	color:#4b4b4b;
	border-style: solid;
	border-width: 2px;
}
.myPNG {
	object-fit:contain;
    height:100%;
    width:100%;
}

/* Character Name Style */
[data-ui="who"] {

}

/* Style for Centered Text */
[data-component="centered-dialog"] {
	color:#ffffff;
}

/* Character Images Styles */
[data-screen="game"] [data-character] {

}

/* Other Images Styles */
[data-screen="game"] [data-image] {

}

/**
 * ===========================
 * Quick Menu Styling
 * ===========================
**/

/* These styles are applied to the Mobile version of the Quick Menu */

/* Quick Menu Style */
[data-component="quick-menu"] {
	background:#202020;
}

/* Quick Menu Buttons Style */
[data-component="quick-menu"] span {

}

/* Quick Menu Buttons Style on Hover */
[data-component="quick-menu"] span:hover {

}

/* Quick Menu Buttons Icon Style */
[data-component="quick-menu"] > span > .fa {

}

/**
 * ===========================
 * Range Styling
 * ===========================
**/

/* Use the background property to set a color for these */
input[type=range]:focus::-webkit-slider-runnable-track {

}

input[type=range]::-webkit-slider-runnable-track {

}

input[type=range]:focus::-ms-fill-upper {

}

input[type=range]:focus::-ms-fill-lower {

}

input[type=range]::-moz-range-track {

}

input[type=range]::-ms-fill-lower {

}

input[type=range]::-ms-fill-upper {

}

/** Medium Screens, Phablets (601px) **/
@media screen and (min-width: 37.56255em) {
	/* Styles for the desktop version of the Quick Menu */

	/* Quick Menu Style */
	[data-component="quick-menu"] {
		background:#202020;
		top:0;
	}
	text-box, text-box::after {
		bottom: 0rem;
	}

	/* Quick Menu Buttons Style */
	[data-component="quick-menu"] span {

	}

	/* Quick Menu Buttons Style on Hover */
	[data-component="quick-menu"] span:hover {

	}

	game-logo-container {
		margin-top: 40px;
		width: 300px;
		height: 396px;
		background-image: url("../assets/images/title.svg");
		align-self: center;
	}
}

/** Medium Devices, Tablets (992px)**/
@media screen and (min-width: 62em) {

}

/** HD Screen, Large Devices, Wide Screens, Desktop (1200px) **/
@media screen and (min-width: 75em) {

}

/** Full HD Screen, Large Devices, Wide Screens, Large Desktops (1920px) **/
@media screen and (min-width: 120em) {

}

/** Retina Screen , Large Devices, Wide Screens(2560px) **/
@media screen and (min-width: 160em) {

}

/** 4k Screens, Large Devices, Wide Screens (3840px) **/
@media screen and (min-width: 240em) {

}

/** 5k Screens, Large Devices, Wide Screens (5000px) **/
@media screen and (min-width: 312.5em) {

}

/** 8k Screens, Large Devices, Wide Screens (8000px) **/
@media screen and (min-width: 500em) {

}

.bigger{
	background-size: contain;
	animation-name: bigger; /* Name of the animation to use */
    animation-duration: 4s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes bigger{
	0%    { 
        transform: scale(3) translateX(0); 
    }
    100%  {
        transform: scale(3); 
    }
}

.ken-burn {
    background-size: contain;
	animation-name: ken-burns; /* Name of the animation to use */
    animation-duration: 4s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes ken-burns {
    0%    { 
        transform: scale(3); 
    }
    100%  {
		transform: scale(3) translateX(-500px); 
    }
}

.Center {
    background-size: contain;
	animation-name: Center; /* Name of the animation to use */
    animation-duration: 1s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes Center {
    0%    { 
        transform: scale(0); 
    }
    100%  {
		transform: scale(1); 
    }
}

.Left{
    background-size: contain;
	animation-name: Left; /* Name of the animation to use */
    animation-duration: 1s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes Left {
    0%    { 
        transform: scale(0) translateX(-300pX); 
    }
    100%  {
		transform: scale(1) translateX(-300pX); 
    }
}

.Right{
    background-size: contain;
	animation-name: Right; /* Name of the animation to use */
    animation-duration: 1s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes Right {
    0%    { 
        transform: scale(0) translateX(300pX); 
    }
    100%  {
		transform: scale(1) translateX(300pX); 
    }
}

.MtoL{
    background-size: contain;
	animation-name: MtoL; /* Name of the animation to use */
    animation-duration: 1s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes MtoL {
    0%    { 
        transform: translateX(0); 
    }
    100%  {
		transform: translateX(-300pX); 
    }
}

.MtoR{
    background-size: contain;
	animation-name: MtoR; /* Name of the animation to use */
    animation-duration: 1s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes MtoR {
    0%    { 
        transform: translateX(0); 
    }
    100%  {
		transform: translateX(300pX); 
    }
}

.RtoM{
    background-size: contain;
	animation-name: RtoM; /* Name of the animation to use */
    animation-duration: 1s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes RtoM {
    0%    { 
        transform: translateX(300pX); 
    }
    100%  {
		transform: translateX(0); 
    }
}

.RfadeOut{
    background-size: contain;
	animation-name: RfadeOut; /* Name of the animation to use */
    animation-duration: 1s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes RfadeOut {
    0%    { 
        transform: translateX(300pX) scale(1); 
    }
    100%  {
		transform: translateX(300pX) scale(0); 
    }
}

.LfadeOut{
    background-size: contain;
	animation-name: LfadeOut; /* Name of the animation to use */
    animation-duration: 1s;
    animation-iteration-count: 1; /* 1 if it should only move once */
    animation-timing-function: ease;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    -moz-transition: ease 1s all;
    -o-transition: ease 1s all;
    -webkit-transition: ease 1s all;
    transition: ease 1s all;
}

@keyframes LfadeOut {
    0%    { 
        transform: translateX(-300pX) scale(1); 
    }
    100%  {
		transform: translateX(-300pX) scale(0); 
    }
}

